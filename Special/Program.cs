using System;
using System.Numerics;

namespace Special
{
    public class Program
    {
        /*public static void Main(string[] args)
        {
            BigInteger bigInt = BigInteger.Parse("");
            bigInt = BigInteger.Pow(bigInt, 100000);
            Console.WriteLine($"{bigInt}");
            for (int i = 1; i < 1000; i++)
            {
                Console.WriteLine($"{(char)value}");
            }
        }*/
        // 2041266874384980441424866433954728493974986268792063004024118142008875529235895186254434806989211728903969885280195473854160164236835544596069250128542690315869273023035267209009213424341497319024849276483974720009969766369984466791221292120257208789394994063072873904628865585258999099879913257083122018219455009060334056137965576931387632581597305729946344663430045230657627770675001567207106493891213111963012283565720158304947061039797335441668535345689804692985488897121648063591994011195678647926654981832836497850856609458732519725982448355674538049684364257504701863203362012082684005307698449291834402649199480738999003643074600926033327087019541666392752077916180397746168140566235825722915269606032138558002617740258956796081142685183944513739793970038868223749047594558913724270678945892285755292180156971496590625967240848598403837407273472658086840467912542854835582796479403937100786591282662629111625092289747038843979365983337943368632099494763176598774987621520626018114650163462667681242486192218395312471672844211970628100

        /*
         * xps = []
            def xp_needed(level):
                if (len(xps) > level):
                    return xps[level]
                if (level == 1):
                    xps.append(100)
                    return 100
                value = xp_needed(level - 1) * 1.1
                xps.append(value)
                return value

            for i in range(1, 1000):
                print(f"{i}: {xp_needed(i)}")
         */

        // 1.000.000
        // 1.000.000.000
        // 1.000.000.000
        // 1.000.000.000.000
        // 1.000.000.000.000.000 -> aa
        // ab = 1.000.000.000.000.000 * 1000
        // ac = ab * 1000 1000^26^26
        // aa * 1000
        // ab ac ad ae af ag ah i az -> ba bb bc bd be bbf bg bz -> ca cb cc
        /*public static BigInteger GetXpNeeded(int n)
        {
            if (n == 1) return 100;
            return (BigInteger)(GetXpNeeded(n - 1) * 11) / 10;
        }
        */
    /*
    public static void Main(string[] args)
    {
        string input = Console.ReadLine();

        for (int ii = 0; ii < input.Length; ii++)
        {
            if (ii % 2 == 0) Console.Write(" ");
            Console.Write(input[ii]);
        }

        string texto = "";
        bool skipNext = false;
        for (int i = 0; i<input.Length; i++)
        {
            char now = input[i];
            if (skipNext)
            {
                skipNext = false;
                continue;
            }

            if (i+1 < input.Length && input[i + 1] == now)
            {
                texto += $" {now}{now} ";
                skipNext = true;
                continue;
            }

            texto += now;
        }
        Console.WriteLine(texto);
    }
    static void AddThree(int num)
    {
    }*/
    
        
        public static void Main(string[] args) 
        {
            Console.Write("Insert n-th number of the special sequence: ");
            int input = int.Parse(Console.ReadLine());
            // 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, ...
            Console.WriteLine(GetSpecial(input));
            
        }
        
        private static int GetSpecial(int n)
        {
            if (n < 2) return n;
            // último número + 2× penúltimo número
            return GetSpecial(n-1) + (2 * GetSpecial(n-2));
        }
    }
}
